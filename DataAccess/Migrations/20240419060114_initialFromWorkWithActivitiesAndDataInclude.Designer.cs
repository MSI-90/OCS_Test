// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using TestWorkForNotion.DataAccess;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20240419060114_initialFromWorkWithActivitiesAndDataInclude")]
    partial class initialFromWorkWithActivitiesAndDataInclude
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Domain.Models.ActivityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("description");

                    b.Property<byte>("TypeOfActivity")
                        .HasMaxLength(20)
                        .HasColumnType("smallint")
                        .HasColumnName("activity_kind");

                    b.HasKey("Id");

                    b.ToTable("activities", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Доклад, 35 - 45 минут",
                            TypeOfActivity = (byte)0
                        },
                        new
                        {
                            Id = 2,
                            Description = "Мастеркласс, 1-2 часа",
                            TypeOfActivity = (byte)1
                        },
                        new
                        {
                            Id = 3,
                            Description = "Дискуссия/круглый стол, 40-50 минут",
                            TypeOfActivity = (byte)2
                        });
                });

            modelBuilder.Entity("NotionTestWork.Domain.Models.UserReport", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<byte>("Activity")
                        .HasColumnType("smallint")
                        .HasColumnName("activity");

                    b.Property<Guid>("Author")
                        .HasColumnType("uuid")
                        .HasColumnName("author_id");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("crated_time");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("character varying(300)")
                        .HasColumnName("description");

                    b.Property<bool>("IsSubmitted")
                        .HasColumnType("boolean")
                        .HasColumnName("is_submitted");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.Property<string>("Outline")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)")
                        .HasColumnName("outline");

                    b.HasKey("Id");

                    b.ToTable("application", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
